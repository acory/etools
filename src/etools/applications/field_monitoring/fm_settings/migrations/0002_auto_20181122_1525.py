# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-11-22 15:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('partners', '0028_auto_20181108_1503'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('locations', '0004_pcode_remap_related'),
        ('reports', '0013_auto_20180709_1348'),
        ('field_monitoring_shared', '0001_initial'),
        ('field_monitoring_settings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckListCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CheckListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('question_number', models.CharField(max_length=10, verbose_name='Question Number')),
                ('question_text', models.CharField(max_length=255, verbose_name='Question Text')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='question_text', verbose_name='Slug')),
                ('is_required', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='field_monitoring_settings.CheckListCategory', verbose_name='Category')),
            ],
            options={
                'ordering': ('category', 'order'),
            },
        ),
        migrations.CreateModel(
            name='LogIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('issue', models.TextField(verbose_name='Issue For Attention/Probing')),
                ('status', models.CharField(choices=[('new', 'New'), ('past', 'Past')], default='new', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_logissues', to=settings.AUTH_USER_MODEL, verbose_name='Issue Raised By')),
                ('cp_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.Result', verbose_name='CP Output')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Location', verbose_name='Location')),
                ('location_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='field_monitoring_settings.LocationSite', verbose_name='Site')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerOrganization', verbose_name='Partner')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlannedCheckListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('checklist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='field_monitoring_settings.CheckListItem', verbose_name='Checklist Item')),
            ],
        ),
        migrations.CreateModel(
            name='PlannedCheckListItemPartnerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specific_details', models.TextField(blank=True, verbose_name='Specific Details To Probe')),
                ('standard_url', models.CharField(blank=True, max_length=1000, verbose_name='URL To Standard')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerOrganization', verbose_name='Partner')),
                ('planned_checklist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partners_info', to='field_monitoring_settings.PlannedCheckListItem', verbose_name='Planned Checklist Item')),
            ],
        ),
        migrations.AddField(
            model_name='cpoutputconfig',
            name='recommended_method_types',
            field=models.ManyToManyField(blank=True, to='field_monitoring_settings.FMMethodType', verbose_name='Method(s)'),
        ),
        migrations.AddField(
            model_name='plannedchecklistitem',
            name='cp_output_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planned_checklist_items', to='field_monitoring_settings.CPOutputConfig', verbose_name='CP Output Config'),
        ),
        migrations.AddField(
            model_name='plannedchecklistitem',
            name='methods',
            field=models.ManyToManyField(blank=True, to='field_monitoring_shared.FMMethod', verbose_name='Method(s)'),
        ),
        migrations.AlterUniqueTogether(
            name='plannedchecklistitempartnerinfo',
            unique_together=set([('planned_checklist_item', 'partner')]),
        ),
        migrations.AlterUniqueTogether(
            name='plannedchecklistitem',
            unique_together=set([('cp_output_config', 'checklist_item')]),
        ),
        migrations.AlterModelOptions(
            name='checklistcategory',
            options={'ordering': ('order',), 'verbose_name': 'Checklist Category', 'verbose_name_plural': 'Checklist Categories'},
        ),
        migrations.AlterModelOptions(
            name='checklistitem',
            options={'ordering': ('category', 'order'), 'verbose_name': 'Checklist Item', 'verbose_name_plural': 'Checklist Items'},
        ),
        migrations.AlterModelOptions(
            name='logissue',
            options={'ordering': ('id',), 'verbose_name': 'Log Issue', 'verbose_name_plural': 'Log Issues'},
        ),
        migrations.AlterModelOptions(
            name='plannedchecklistitem',
            options={'ordering': ('id',), 'verbose_name': 'Planned Checklist Item', 'verbose_name_plural': 'Planned Checklist Items'},
        ),
        migrations.AlterModelOptions(
            name='plannedchecklistitempartnerinfo',
            options={'ordering': ('id',), 'verbose_name': 'Planned Checklist Item Partner Info', 'verbose_name_plural': 'Planned Checklist Items Partners Info'},
        ),
    ]
